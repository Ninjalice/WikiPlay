/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Wikiplay;

import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.Socket;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.text.DefaultCaret;

/**
 *
 * @author Endika
 */
public class ChatPanel extends javax.swing.JPanel {

    public static DataOutputStream out;
    public static String ip;
    public static String name;
    /**
     * Creates new form ChatPanel
     */
    public ChatPanel(String ip,String name) {
        this.ip = ip;
        this.name = name;
        initComponents();
        initChatClient();
        DefaultCaret caret = (DefaultCaret) chatArea.getCaret();
        caret.setUpdatePolicy(DefaultCaret.ALWAYS_UPDATE);

    }

    public static void writeLine(String linea) {
        chatArea.append(linea + "\n");
    }

    public static void initChatClient() {        
        try {
            final String hostAddr = ip;
            final int port = 12000;
            final Scanner scanner = new Scanner(System.in);
            final Socket socket = new Socket(hostAddr, port);

            System.out.println("Chat Socket connected to " + socket.getInetAddress() + ":" + socket.getPort());

            final DataInputStream in = new DataInputStream(socket.getInputStream());
            out = new DataOutputStream(socket.getOutputStream());           
            
            out.writeUTF("/nickname " +name);
            Thread recvThread = new Thread() { //we read on a different thread to avoid getting blocked by the keyboard reading
                public void run() {
                    try {
                        while (!this.isInterrupted()) {
                            String recv = in.readUTF();
                            System.out.println("Recv: " + recv);
                            writeLine(recv);

                        }
                    } catch (IOException ex) {
                        System.out.println("ERROR EN CHATPANEL RUB RECV" + ex);                       
                    }
                }
            };
            recvThread.start();
        } catch (Exception e) {
            System.out.println("Error in conecting to chatserver from ChatPanel" + e);            
            chatArea.setText("ERROR IN THE CONECTION");
        }

       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        chatArea = new javax.swing.JTextArea();
        chatField = new javax.swing.JTextField();

        setBackground(new java.awt.Color(204, 204, 204));

        chatArea.setEditable(false);
        chatArea.setColumns(20);
        chatArea.setRows(5);
        jScrollPane1.setViewportView(chatArea);

        chatField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chatFieldActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .addComponent(chatField))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 234, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(chatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void chatFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chatFieldActionPerformed
        String msg = chatField.getText();
        chatField.setText("");
        if (msg.equalsIgnoreCase("exit")) {
        }
        if (!msg.isEmpty()) {

            try {
                //we want to send
                out.writeUTF(msg);
                out.flush(); //flush forces to send everything that may be in the buffer
            } catch (IOException ex) {
                System.out.println("ERROR EN CHAT FIELD ACTION PERFORMED WRITEUTF");
                Logger.getLogger(ChatPanel.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_chatFieldActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextArea chatArea;
    private javax.swing.JTextField chatField;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
